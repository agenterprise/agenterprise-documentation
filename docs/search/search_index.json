{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Agenterprise:  \u2693 + \ud83e\udebd","text":"== Give your AI project \u2693 anchors and \ud83e\udebd wings == Define clearly separated AI Envs with abstract DSL Generate techlayers in a framework/service intended way. Build  custom layer on top of it Still here? Read on below ...."},{"location":"#still-here","title":"Still here?","text":"<p>NOTE: Agenterprise is currently in Alpha Phase</p> <ul> <li>Model-driven, agentic enterprise software meets GenAI</li> <li>Architecture decoupled from technology</li> <li>Liveline from PoC to Enterprise Setups</li> <li>Open source stability reduces technology and vendor logi</li> </ul> <p>Agenterprise is an open source project focused on model-driven software development for agentic enterprise architectures and beyond. The goal is to enable intelligent solutions that remain independent of specific libraries and frameworks, by decoupling architecture from technology choices.</p> <p>With Agenterprise's domain-specific language (DSL), you can describe your AI and agentic architectures in a technology-neutral way. This makes it possible to generate different tech stacks or service stacks from the same model, adapting flexibly to changing requirements or platforms.</p> <p>This approach allows:</p> <ul> <li>Separation of business logic and technical implementation</li> <li>Decoupling enterprise architecture from vendor or framework dependencies</li> <li>Integration with various AI and agent technologies</li> </ul> <p>Generative AI is rapidly accelerating software development. However, if you need a stable, enterprise-ready foundation that can be combined with GenAI features, Agenterprise provides a robust and flexible base to build on.</p> <p>Agenterprise invites everyone interested in flexible, scalable, and sustainable software to explore model-driven development and DSLs for agentic enterprise solutions.</p>"},{"location":"dsl/","title":"The Agenterprise.ai DSL","text":""},{"location":"dsl/#dsl-levels-overview","title":"DSL Levels Overview","text":"<p>The Agenterprise DSL is structured in distinct layers as levels, each representing a core aspect of agentic, model-driven enterprise systems. The following example illustrates the main levels:</p>"},{"location":"dsl/#1-environment-level","title":"1. Environment Level","text":"<p>Defines the overall AI environment or context for the system.</p> <pre><code>ai_environment \"AgentMicroservice\"\n</code></pre>"},{"location":"dsl/#21-architecture-level","title":"2.1 Architecture Level","text":"<p>Describes the architecture, including environment IDs and technology stacks for services and AI components.</p> <pre><code>architecture{\n    envid = \"fb98001a0ce94c44ad091de3d2e78164\"\n    service-techlayer = aiurn:techlayer:local:..:templates:service-layer-fastapi-base\n    ai-techlayer = aiurn:techlayer:local:..:templates:ai-layer-pydanticai\n\n}\n</code></pre> <p>Read on at Architecture Layer</p>"},{"location":"dsl/#22-infrastructure-level","title":"2.2 Infrastructure Level","text":"<p>Specifies infrastructure resources such as LLMs, providers, endpoints, and versions.</p> <pre><code>infrastructure {\n    llm \"My LLM\" {\n        uid = aiurn:model:id:geepeetee\n        provider = aiurn:model:provider:azure \n        model = \"gpt-4o\"\n        endpoint = \"https://any.openai.azure.com/\"\n        version = \"2025-01-01-preview\"\n        aiurn:var:temperature = 0.7\n        aiurn:var:costid = \"ewe3949\" \n        aiurn:var:hello = True \n    }\n}\n</code></pre> <p>Read on at Infrastructure Layer</p>"},{"location":"dsl/#23-ai-functional-level","title":"2.3 AI Functional Level","text":"<p>Defines agents, tools, and their properties, including prompts, references, variables, and endpoints.</p> <pre><code>functional{\n    agent \"Cook\" {\n        uid = aiurn:agent:cook\n        namespace = aiurn:ns:janes_diner:kitchen\n        systemprompt = \"You're a four star rated metre working at https://my.littlerestaurant.example\"\n        llmref = aiurn:model:id:geepeetee \n        toolref = aiurn:tool:cooking:v1\n        toolref =aiurn:tool:crawler:v2\n        aiurn:var:name = \"Max Mustermann\"\n        aiurn:var:role = \"waiter\"\n        aiurn:var:lifeycle = \"permanent\"\n        aiurn:var:events = \"onRestaurantOpening\"\n\n    }\n\n    agent \"Waiter\" {\n        uid = aiurn:agent:waiter\n        namespace = aiurn:ns:kkweinhauschen:guestroom\n        systemprompt = \"Du bist ein freundlicher und aufmerksamer Oberkellner und managed das Restaurant https://my.littlerestaurant.example\"\n        llmref = aiurn:model:id:geepeetee \n        toolref = aiurn:tool:crawler:v2\n        toolref = aiurn:tool:bmi:v1\n        aiurn:var:name = \"Max Mustermann\"\n        aiurn:var:role = \"waiter\"\n        aiurn:var:lifeycle = \"permanent\"\n        aiurn:var:events = \"onRestaurantOpening\"\n    }\n    tool \"bmicalculator\" {\n        uid = aiurn:tool:bmi:v1\n        in = aiurn:toolvar:weight # \"The weight of the person\"\n        in = aiurn:toolvar:height # \"The heigt of ther person\"\n        out = aiurn:toolvar:bmi # \"The calculated BMI (Body Mass Index)\"\n        endpoint = \"lambda weight, height: round(weight / (height ** 2), 2)\"\n        type = aiurn:tooltype:code\n        description = \"Tool calculating the bmi by weight and height\"\n\n    }\n    tool \"Mealdb\" {\n        uid = aiurn:tool:cooking:v1\n        in = aiurn:toolvar:meal # \"A meal\"\n        out = aiurn:toolvar:description # \"A listing about ingridients\"\n        endpoint = \"https://www.themealdb.com/api/json/v1/1/search.php?s=aiurn:tool:input:meal\"\n        type = aiurn:tooltype:ressource\n        description = \"Tool for finding a meal deescription.\"\n\n    }\n        tool \"Webcrawler\" {\n        uid = aiurn:tool:crawler:v2\n        endpoint = \"https://remote.mcpservers.org/fetch/mcp\"\n        type = aiurn:tooltype:mcp\n        description = \"Tool for fetching webpages\"\n\n    }\n\n}\n</code></pre> <p>Read on at AI Functional Layer</p> <p>Each level in the DSL enables clear separation of concerns, making it possible to model, generate, and manage complex agentic enterprise systems in a technology-neutral and flexible way.</p>"},{"location":"dsl/ai-functional-layer/","title":"AI Functional Layer","text":"<p>This section covers the AI functional layer in the Agenterprise DSL. It describes how to define agents, their properties, prompts, references, and variables.</p>"},{"location":"dsl/ai-functional-layer/#agent","title":"Agent","text":"<p>Example</p> <pre><code> agent \"Cook\" {\n    uid = aiurn:agent:cook \n    namespace = aiurn:ns:janes_diner:kitchen\n    systemprompt = \"You're a four star rated metre working at https://my.littlerestaurant.example\"\n    llmref = aiurn:model:id:geepeetee \n    toolref = aiurn:tool:cooking:v1\n    toolref = aiurn:tool:crawler:v2\n    aiurn:var:name = \"Max Mustermann\"\n    aiurn:var:role = \"waiter\"\n    aiurn:var:lifeycle = \"permanent\"\n    aiurn:var:events = \"onRestaurantOpening\"\n\n}\n</code></pre>"},{"location":"dsl/ai-functional-layer/#specs","title":"Specs","text":"<p>Give the Agent a name by assign a name to agent %MY_NAME% { ... }</p> Attribute Assignment Rule Cardinality Examples uid aiurn:agent:%AGENT_ID% append %AGENT_ID% to aiurn:agent: the name of your agent 1..1 aiurn:agent:cook namespace aiurn:ns:%NAMESPACE% append %NAMESPACE% to aiurn:agent:ns: the namespace of the agent. 1..1 aiurn:ns:mynamespace:subnamespace   aiurn:ns:mynamespace llmref aiurn:model:id:%LLMID% take the uid given to the LLM Defintion 1..1 aiurn:model:id:geepeetee:myllmid toolref aiurn:tool:%TOOLID% take the uid given to the Tool Defintion (below) 0..N aiurn:tool:toolid aiurn:var aiurn:tool:%VARNAME% = %MY_VALUE\" add a property to the agent 0..N aiurn:var:name = \"Max Mustermann\""},{"location":"dsl/ai-functional-layer/#tool","title":"Tool","text":"<p>Example:</p> <pre><code>tool \"bmicalculator\" {\n    uid = aiurn:tool:bmi:v1\n    in = aiurn:toolvar:weight # \"The weight of the person\"\n    in = aiurn:toolvar:height # \"The heigt of ther person\"\n    out = aiurn:toolvar:bmi # \"The calculated BMI (Body Mass Index)\"\n    endpoint = \"lambda weight, height: round(weight / (height ** 2), 2)\"\n    type = aiurn:tooltype:code\n    description = \"Tool calculating the bmi by weight and height\"\n\n}\n</code></pre>"},{"location":"dsl/ai-functional-layer/#specs_1","title":"Specs","text":"<p>Give the Tool a name by assign a name to tool %MY_NAME% { ... }</p> Attribute Assignment Rule Cardinality Examples uid aiurn:tool:%TOOL_ID% append %TOOL_ID% to aiurn:tool: the name of your agent 1..1 aiurn:tool:calc:bmi in aiurn:toolvar:%VARNAME% # %PROPERTY_DESCRIPTION% specify a input variable with name %VARNAME% and describe the property with %PROPERTY_DESCRIPTION% 0..N in = aiurn:toolvar:weight # \"The weight of the person\" out aiurn:toolvar:%VARNAME% # %PROPERTY_DESCRIPTION% specify a output variable with name %VARNAME% and describe the property with %PROPERTY_DESCRIPTION% 0..N out = aiurn:toolvar:bmi # \"The calculated BMI (Body Mass Index)\" endpoint %ENDPOINT% Depending on type specify: <ul><li> MCP --&gt; a streamable https url to remote MCP server</li><li>python code --&gt; write a custom python function</li><ul> 1..1 <ul><li> MCP --&gt; https://remote.mcpservers.org/fetch/mcp</li><li>python code --&gt; <code>\"lambda weight, height: round(weight / (height ** 2), 2)\"</code></li><ul> type aiurn:tooltype:code for custom code or aiurn:tooltype:mcp for mcp server take the uid given to the Tool Defintion (below) 1..1 aiurn:tooltype:code description a text A  description of the tool 1..1 \"Tool calculating the bmi by weight and height\""},{"location":"dsl/architecture-layer/","title":"Architecture Layer","text":""},{"location":"dsl/architecture-layer/#architecture","title":"Architecture","text":"<p>Example</p> <pre><code> architecture{\n    envid = \"fb98001a0ce94c44ad091de3d2e78164\"\n    service-techlayer = aiurn:techlayer:local:..:templates:service-layer-fastapi-base\n    ai-techlayer = aiurn:techlayer:local:..:templates:ai-layer-pydanticai\n\n}\n</code></pre>"},{"location":"dsl/architecture-layer/#specs","title":"Specs","text":"Attribute Assignment Rule Cardinality Examples envid %UID% a unique id as %UID% representing the project 1..1 envid = \"fb98001a0ce94c44ad091de3d2e78164\" service-techlayer aiurn:techlayer:local:%RELATIVE_LOCAL_PATH%   aiurn:techlayer:github:%GITHUB_DOMAIN%:%PROFILE%:%TEMPLATE% <ul><li>set your path %RELATIVE_LOCAL_PATH% in an urn style </li><li> %GITHUB_DOMAIN%:%PROFILE%:%TEMPLATE% specifies a public template to a github project in urn style.</li></ul> 1..1 service-techlayer = aiurn:techlayer:local:..:templates:service-layer-fastapi-base  service-techlayer = aiurn:techlayer:github:www.github.com:agenterprise:service-layer-fastapi-base ai-techlayer aiurn:techlayer:local:%RELATIVE_LOCAL_PATH%   aiurn:techlayer:github:%GITHUB_DOMAIN%:%PROFILE%:%TEMPLATE% <ul><li>set your path %RELATIVE_LOCAL_PATH% in an urn style </li><li> %GITHUB_DOMAIN%:%PROFILE%:%TEMPLATE% specifies a public template to a github project in urn style.</li></ul> 1..1 service-techlayer = aiurn:techlayer:local:..:templates:ai-layer-pydanticai  service-techlayer = aiurn:techlayer:github:www.github.com:agenterprise:ai-layer-pydanticai"},{"location":"dsl/architecture-layer/#ressources","title":"Ressources","text":"<p>Find currated lists for agenterprise layer at  * Agenterprise AI-Layers List * Agenterprise Service-Layers List</p> <p>Feel free to  * clone templates for your own purposes.  * get in contact with agenterprise to add these to the above lists</p>"},{"location":"dsl/infrastruture-layer/","title":"Infrastructure Layer","text":""},{"location":"dsl/infrastruture-layer/#llm-large-language-model","title":"LLM (Large Language Model)","text":"<p>Example:</p> <pre><code>infrastructure {\n    llm \"My LLM\" {\n        uid = aiurn:model:id:geepeetee\n        provider = aiurn:model:provider:azure \n        model = \"gpt-4o\"\n        endpoint = \"https://any.openai.azure.com/\"\n        version = \"2025-01-01-preview\"\n        aiurn:var:temperature = 0.7\n        aiurn:var:costid = \"ewe3949\" \n        aiurn:var:hello = True \n    }\n}\n</code></pre>"},{"location":"dsl/infrastruture-layer/#specs","title":"Specs","text":"<p>Give the LLM a name by assign a name to tool %MY_NAME% { ... }</p> Attribute Assignment Rule Cardinality Examples uid aiurn:model:%MODEL_ID% append %MODEL_ID% to aiurn:model: the identifier of your llm 1..1 uid = aiurn:model:id:geepeetee provider aiurn:model:provider:azure or  aiurn:model:provider:openai specify the provider of the Model [^1]: More Provider to follow. 1..1 provider = aiurn:model:provider:azure model %MODEL_NAME% specify the given name of the model, recognize this with the selected provider. I.e Azure Foundry uses a custom name for this 1..1 model = \"gpt-4o\" endpoint %ENDPOINT% The endpoint the provider ensures access 1..1 endpoint = \"https://any.openai.azure.com/\" version %VERSION% a version how to talk to the provider 1..1 version = \"2025-01-01-preview\" aiurn:var aiurn:var:%VARNAME% = %MY_VALUE\" add a property to the llm. The parameter names can also overide model options if name is aligned 0..N aiurn:var:temperature = 0.7"},{"location":"dsl/service-layer/","title":"Service Layer","text":"<p>This section describes the service layer in the Agenterprise DSL. It explains how to define tools, endpoints, types, and descriptions for service integration.</p> <ul> <li>How to specify service tools</li> <li>Example usage</li> <li>Best practices\u00a0</li> </ul>"},{"location":"generator/","title":"Overview","text":""},{"location":"generator/#installation","title":"Installation","text":""},{"location":"generator/#pypi","title":"PyPI","text":"<pre><code>pip install agenterprise\n</code></pre>"},{"location":"generator/#for-developlment","title":"For developlment","text":"<p>Follow these steps to install it from source</p> <pre><code>git clone https://github.com/agenterprise/agenterprise.git\ncd agenterprise\npip install -e .\n</code></pre>"},{"location":"generator/#usage-example","title":"Usage Example","text":""},{"location":"generator/#create-a-dsl-file","title":"Create a DSL File","text":"<p>You can either start with a DSL File from scratch (see http://www.agenterprise.ai) or generate a sample file with:</p> <pre><code>agenterprise --dsl-template --dsl mydsl.dsl     \n</code></pre>"},{"location":"generator/#generate-a-project","title":"Generate a project","text":"<p>Whith your created DSL File you can now generate a project:</p> <pre><code>agenterprise --code-generation --dsl mydsl.dsl --target target/mydsl\n</code></pre>"},{"location":"installation/","title":"Index","text":"<p>Work in Pogress</p>"}]}